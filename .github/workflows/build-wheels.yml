name: Build wheels

on:
  push:
    branches: [ main, feat/python-wheel ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-*"
      CIBW_SKIP: "pp*"
      CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel -v repair -w {dest_dir} {wheel}"
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: "delocate-wheel -v -w {dest_dir} {wheel}"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install tooling
        run: python -m pip install build cibuildwheel
      - name: Build libsixel (POSIX)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set -euxo pipefail
          if ! bash python-wheel/scripts/build_libsixel_autotools.sh; then
            bash python-wheel/scripts/build_libsixel_meson.sh
          fi
      - name: Build libsixel (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          & python-wheel/scripts/build_libsixel_windows.ps1
      - name: Copy libsixel artifacts
        shell: bash
        run: |
          set -euxo pipefail
          STAGE="python-wheel/.stage"
          if [ ! -d "$STAGE" ]; then
            echo "stage directory missing: $STAGE" >&2
            exit 1
          fi
          bash python-wheel/scripts/copy_libsixel_artifacts.sh "$STAGE"
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
      - name: Show results
        shell: bash
        run: ls -R wheelhouse
